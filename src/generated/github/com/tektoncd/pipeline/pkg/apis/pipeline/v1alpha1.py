# generated by datamodel-codegen:
#   filename:  tekton.swagger.json
#   timestamp: 2022-03-30T02:38:37+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field

from src.generated.github.com.tektoncd.pipeline.pkg.apis.pipeline import v1


class PipelineResourceStatus(BaseModel):
    pass

    class Config:
        allow_population_by_field_name = True


class ResourceDeclaration(BaseModel):
    class Config:
        allow_population_by_field_name = True

    description: Optional[str] = Field(
        None,
        description='Description is a user-facing description of the declared resource that may be used to populate a UI.',
    )
    name: str = Field(
        ...,
        description="Name declares the name by which a resource is referenced in the definition. Resources may be referenced by name in the definition of a Task's steps.",
    )
    optional: Optional[bool] = Field(
        None,
        description='Optional declares the resource as optional. By default optional is set to false which makes a resource required. optional: true - the resource is considered optional optional: false - the resource is considered required (equivalent of not specifying it)',
    )
    target_path: Optional[str] = Field(
        None,
        alias='targetPath',
        description='TargetPath is the path in workspace directory where the resource will be copied.',
    )
    type: str = Field(..., description='Type is the type of this resource;')


class ResourceParam(BaseModel):
    class Config:
        allow_population_by_field_name = True

    name: str
    value: str


class SecretParam(BaseModel):
    class Config:
        allow_population_by_field_name = True

    field_name: str = Field(..., alias='fieldName')
    secret_key: str = Field(..., alias='secretKey')
    secret_name: str = Field(..., alias='secretName')


class PipelineResourceSpec(BaseModel):
    class Config:
        allow_population_by_field_name = True

    description: Optional[str] = Field(
        None, description='Description is a user-facing description of the resource that may be used to populate a UI.'
    )
    params: List[ResourceParam]
    secrets: Optional[List[SecretParam]] = Field(
        None, description='Secrets to fetch to populate some of resource fields'
    )
    type: str


class PipelineResource(BaseModel):
    class Config:
        allow_population_by_field_name = True

    api_version: Optional[str] = Field(
        None,
        alias='apiVersion',
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ObjectMeta] = {}
    spec: Optional[PipelineResourceSpec] = Field(
        {}, description='Spec holds the desired state of the PipelineResource from the client'
    )
    status: Optional[PipelineResourceStatus] = Field(
        None,
        description='Status is deprecated. It usually is used to communicate the observed state of the PipelineResource from the controller, but was unused as there is no controller for PipelineResource.',
    )


class PipelineResourceList(BaseModel):
    class Config:
        allow_population_by_field_name = True

    api_version: Optional[str] = Field(
        None,
        alias='apiVersion',
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    items: List[PipelineResource]
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ListMeta] = {}
